/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode(int x) : val(x), next(NULL) {}
 * };
 */
class Solution {
public:
    ListNode* mergeTwoLists(ListNode* l1, ListNode* l2) {
        ListNode *relt = NULL, *r = NULL;
        ListNode *p = l1, *q = l2;
        
        if (p == NULL && q == NULL) return relt;
        else if (p == NULL)         return q;
        else if (q == NULL)         return p;
        else {
            while(p != NULL && q != NULL) {
                if(p->val <= q->val) {
                    if (relt == NULL) {r = relt = p;}
                    else           {r->next = p; r = r->next;}
                    p = p->next;
                } else {
                    if (relt == NULL) {r = relt = q;}
                    else           {r->next = q; r = r->next;}
                    q = q -> next;
                }
            }
            while (p != NULL) {r->next = p; p = p->next; r = r->next; }
            while (q != NULL) {r->next = q; q = q->next; r = r->next; }
            return relt;
        }
    }
};
